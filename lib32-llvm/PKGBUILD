# resynced with Arch's version from https://projects.archlinux.org/svntogit/community.git/tree/trunk/PKGBUILD?h=packages/lib32-llvm
# adjusted for Chakra

pkgname=('lib32-llvm' 'lib32-llvm-libs' 'lib32-clang')
pkgver=3.9.1
pkgrel=1
arch=('x86_64')
url="http://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
makedepends=('cmake' 'lib32-libffi' 'lib32-zlib' 'python2' 'gcc-libs'
             'lib32-libxml2' 'lib32-gcc-libs')
options=('staticlibs')
source=(http://llvm.org/releases/$pkgver/llvm-$pkgver.src.tar.xz{,.sig}
        http://llvm.org/releases/$pkgver/cfe-$pkgver.src.tar.xz{,.sig}
        http://llvm.org/releases/$pkgver/compiler-rt-$pkgver.src.tar.xz{,.sig}
        AMDGPU-Fix-an-interaction-between-WQM-and-polygon-stippling.patch
        msan-prevent-initialization-failure-with-newer-glibc.patch)
sha256sums=('1fd90354b9cf19232e8f168faf2220e79be555df3aa743242700879e8fd329ee'
            'SKIP'
            'e6c4cebb96dee827fa0470af313dff265af391cb6da8d429842ef208c8f25e63'
            'SKIP'
            'd30967b1a5fa51a2503474aacc913e69fd05ae862d37bf310088955bdb13ec99'
            'SKIP'
            'adadc41090ab0eb33fe4449a0ea3f02b15d03f186262dd89576848a2c66d0ce6'
            '8e4f194c2283b91644a7fff43bc4e58c36b5507f2a4d90b72f275c0bd7511c20')
validpgpkeys=('11E521D646982372EB577A1F8F0871F202119294'
              'B6C8F98282B944E3B0D5C2530FC3042E345AD05D')

prepare() {
  cd "$srcdir/llvm-$pkgver.src"

  # At the present, clang must reside inside the LLVM source code tree to build
  # See http://llvm.org/bugs/show_bug.cgi?id=4840
  mv "$srcdir/cfe-$pkgver.src" tools/clang 
  mv "$srcdir/compiler-rt-$pkgver.src" projects/compiler-rt

  # https://bugs.freedesktop.org/show_bug.cgi?id=99078
  patch -Rp1 -i ../AMDGPU-Fix-an-interaction-between-WQM-and-polygon-stippling.patch

  # https://reviews.llvm.org/D24736
  patch -Np0 -d projects/compiler-rt <../msan-prevent-initialization-failure-with-newer-glibc.patch

  # Somehow CMake finds the 64-bit library in /lib first,
  # so let's preseed CMAKE_LIBRARY_PATH with /lib32.
  sed -i '/^[[:blank:]]*find_library(FFI_LIBRARY_PATH/i\
         list(INSERT CMAKE_LIBRARY_PATH 0 /usr/lib32)' cmake/config-ix.cmake

  mkdir build
}

build() {
  cd "$srcdir/llvm-$pkgver.src/build"

  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
  cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLLVM_LIBDIR_SUFFIX=32 \
    -DCMAKE_C_FLAGS=-m32 \
    -DCMAKE_CXX_FLAGS=-m32 \
    -DLLVM_TARGET_ARCH=i686 \
    -DLLVM_DEFAULT_TARGET_TRIPLE="i686-unknown-linux-gnu" \
    -DLLVM_BUILD_LLVM_DYLIB=ON \
    -DLLVM_LINK_LLVM_DYLIB=ON \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_ENABLE_FFI=ON \
    -DFFI_INCLUDE_DIR=$(pkg-config --variable=includedir libffi) \
    -DLLVM_BUILD_DOCS=OFF \
    -DLLVM_ENABLE_SPHINX=OFF \
    -DLLVM_ENABLE_DOXYGEN=OFF \
    -DLLVM_BINUTILS_INCDIR=/usr/include \
    ..

  make

  # Disable automatic installation of components that go into subpackages
  sed -i '/\(clang\|lldb\)\/cmake_install.cmake/d' tools/cmake_install.cmake
  sed -i '/extra\/cmake_install.cmake/d' tools/clang/tools/cmake_install.cmake
  sed -i '/compiler-rt\/cmake_install.cmake/d' projects/cmake_install.cmake
}

package_lib32-llvm() {
  pkgdesc="Low Level Virtual Machine (32-bit)"
  depends=('lib32-llvm-libs' "llvm=${pkgver}")

  cd "$srcdir/llvm-$pkgver.src"

  make -C build DESTDIR="$pkgdir" install

  # The runtime library goes into lib32-llvm-libs
  mv "$pkgdir"/usr/lib32/lib{LLVM,LTO}*.so* "$srcdir"
  mv -f "$pkgdir"/usr/lib32/{LLVMgold,BugpointPasses}.so "$srcdir"

  # Fix permissions of static libs
  chmod -x "$pkgdir"/usr/lib32/*.a

  mv "$pkgdir/usr/bin/llvm-config" "$pkgdir/usr/lib32/llvm-config"
  mv "$pkgdir/usr/include/llvm/Config/llvm-config.h" \
    "$pkgdir/usr/lib32/llvm-config-32.h"

  # Get rid of example Hello transformation
  rm "$pkgdir"/usr/lib32/*LLVMHello.*

  rm -rf "$pkgdir"/usr/{bin,include,share/{doc,man,llvm}}
  
  # Needed for multilib (https://bugs.archlinux.org/task/29951)
  # Header stub is taken from Fedora
  install -d "$pkgdir/usr/include/llvm/Config"
  mv "$pkgdir/usr/lib32/llvm-config-32.h" "$pkgdir/usr/include/llvm/Config/"
  
  mkdir "$pkgdir"/usr/bin
  mv "$pkgdir/usr/lib32/llvm-config" "$pkgdir/usr/bin/llvm-config32"

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_lib32-llvm-libs() {
  pkgdesc="Low Level Virtual Machine (runtime library)(32-bit) "
  depends=('lib32-libffi' 'lib32-zlib' 'lib32-ncurses' 'lib32-gcc-libs')

  install -d "$pkgdir/usr/lib32"

  cp -P \
    "$srcdir"/lib{LLVM,LTO}*.so* \
    "$srcdir"/{LLVMgold,BugpointPasses}.so \
    "$pkgdir/usr/lib32/"

  # Symlink LLVMgold.so from /usr/lib/bfd-plugins
  # https://bugs.archlinux.org/task/28479
  install -d "$pkgdir/usr/lib32/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib32/bfd-plugins/LLVMgold.so"

  install -Dm644 llvm-$pkgver.src/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_lib32-clang() {
  pkgdesc="C language family frontend for LLVM"
  url="http://clang.llvm.org/"
  depends=("lib32-llvm=$pkgver-$pkgrel" 'clang' 'gcc-multilib')

  cd "$srcdir/llvm-$pkgver.src"

  make -C build/tools/clang DESTDIR="$pkgdir" install

  rm -r "$pkgdir"/usr/{bin,include,share}

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

